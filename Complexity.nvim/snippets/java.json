{
  "Print Statement": {
    "prefix": "sout",
    "body": ["System.out.println(${1:message});"],
    "description": "Shortcut for System.out.println"
  },
  "Print Error": {
    "prefix": "serr",
    "body": ["System.err.println(${1:message});"],
    "description": "Shortcut for System.err.println"
  },
  "Main Method": {
    "prefix": "main",
    "body": [
      "public static void main(String[] args) {",
      "\t${1:// code here}",
      "}"
    ],
    "description": "Generate a Java main method"
  },
  "For Loop": {
    "prefix": "for",
    "body": [
      "for (int ${1:i} = 0; ${1:i} < ${2:10}; ${1:i}++) {",
      "\t${3:// code here}",
      "}"
    ],
    "description": "Generate a Java for loop"
  },
  "Enhanced For Loop": {
    "prefix": "forEach",
    "body": [
      "for (${1:Type} ${2:element} : ${3:collection}) {",
      "\t${4:// code here}",
      "}"
    ],
    "description": "Generate a Java enhanced for loop"
  },
  "If Statement": {
    "prefix": "if",
    "body": ["if (${1:condition}) {", "\t${2:// code here}", "}"],
    "description": "Generate a Java if statement"
  },
  "If-Else Statement": {
    "prefix": "ifelse",
    "body": [
      "if (${1:condition}) {",
      "\t${2:// code if true}",
      "} else {",
      "\t${3:// code if false}",
      "}"
    ],
    "description": "Generate a Java if-else statement"
  },
  "Class": {
    "prefix": "class",
    "body": [
      "public class ${1:ClassName} {",
      "\tpublic ${1:ClassName}() {",
      "\t\t${2:// constructor body}",
      "\t}",
      "}"
    ],
    "description": "Create a Java class"
  },
  "Interface": {
    "prefix": "interface",
    "body": [
      "public interface ${1:InterfaceName} {",
      "\t${2:// methods here}",
      "}"
    ],
    "description": "Create a Java interface"
  },
  "Switch Statement": {
    "prefix": "switch",
    "body": [
      "switch (${1:variable}) {",
      "\tcase ${2:value}:",
      "\t\t${3:// code here}",
      "\t\tbreak;",
      "\tdefault:",
      "\t\t${4:// default code here}",
      "}"
    ],
    "description": "Generate a Java switch statement"
  },
  "Try-Catch": {
    "prefix": "trycatch",
    "body": [
      "try {",
      "\t${1:// code that might throw an exception}",
      "} catch (${2:Exception} e) {",
      "\t${3:// handle exception}",
      "}"
    ],
    "description": "Create a try-catch block"
  },
  "Try-Catch-Finally": {
    "prefix": "trycatchfinally",
    "body": [
      "try {",
      "\t${1:// code that might throw an exception}",
      "} catch (${2:Exception} e) {",
      "\t${3:// handle exception}",
      "} finally {",
      "\t${4:// cleanup code here}",
      "}"
    ],
    "description": "Create a try-catch-finally block"
  },
  "Array Declaration": {
    "prefix": "array",
    "body": ["${1:int[]} ${2:arrayName} = new ${1:int}[${3:size}];"],
    "description": "Declare an array in Java"
  },
  "List Declaration": {
    "prefix": "list",
    "body": ["List<${1:Type}> ${2:listName} = new ArrayList<>();"],
    "description": "Declare a Java ArrayList"
  },
  "Method": {
    "prefix": "method",
    "body": [
      "public ${1:void} ${2:methodName}(${3:}) {",
      "\t${4:// method body}",
      "}"
    ],
    "description": "Generate a Java method"
  },
  "Static Method": {
    "prefix": "staticmethod",
    "body": [
      "public static ${1:void} ${2:methodName}(${3:}) {",
      "\t${4:// static method body}",
      "}"
    ],
    "description": "Generate a static Java method"
  },
  "Constructor": {
    "prefix": "constructor",
    "body": [
      "public ${1:ClassName}(${2:params}) {",
      "\t${3:// constructor body}",
      "}"
    ],
    "description": "Generate a constructor for a Java class"
  },
  "Getters and Setters": {
    "prefix": "getset",
    "body": [
      "public ${1:Type} get${2:Field}() {",
      "\treturn this.${3:field};",
      "}",
      "",
      "public void set${2:Field}(${1:Type} ${3:field}) {",
      "\tthis.${3:field} = ${3:field};",
      "}"
    ],
    "description": "Generate Java getters and setters"
  }
}
